default:
    just --list --unsorted

db-host := env_var_or_default('DB_HOST', "localhost")
db-port := env_var_or_default('DB_PORT', "21432")
db-user := env_var_or_default('DB_USER', "postgres")
db-password := env_var_or_default('DB_PASSWORD', "admin")
db-name := env_var_or_default('DB_NAME', "blockscout_extractor_100")
export DATABASE_URL := "postgres://" + db-user + ":" + db-password + "@" + db-host + ":" + db-port + "/" + db-name

docker-name := env_var_or_default('DOCKER_NAME', "blockscout-extractors-postgres")
#test-db-port := env_var_or_default('TEST_DB_PORT', "21433")

start-postgres:
    # we run it in --rm mode, so all data will be deleted after stopping
    docker run -p {{db-port}}:5432 --name {{docker-name}} -e POSTGRES_PASSWORD={{db-password}} -e POSTGRES_USER={{db-user}} --rm -d postgres
    sleep 3
    # wait for postgres to start, but only if db_name is not empty
    $SHELL -c '[[ -z "{{db-name}}" ]] || docker exec -it {{docker-name}} psql -U postgres -c "create database {{db-name}};"'

stop-postgres:
    docker kill {{docker-name}}

migrate-up:
    sea-orm-cli migrate up -d ../extractors-migration

migrate-down:
    sea-orm-cli migrate down -d ../extractors-migration

new-migration name:
    sea-orm-cli migrate generate {{name}} -d ../extractors-migration

generate-entities:
    sea-orm-cli generate entity --lib -o ../extractors-entity/src

#test *args:
#    cargo test {{args}} -- --include-ignored

#test-with-db *args:
#    just db-port="{{test-db-port}}" db-name="" docker-name="{{docker-name}}-test" start-postgres
#    just db-port="{{test-db-port}}" db-name=""                                    test {{args}}
#    just                            docker-name="{{docker-name}}-test" stop-postgres
#
