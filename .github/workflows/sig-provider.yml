on:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'
  pull_request:
    paths:
      - sig-provider/**
      - .github/workflows/sig-provider.yml


name: Test and lint (sig-provider)

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: blockscout/sig-provider

defaults:
  run:
    working-directory: sig-provider

jobs:
  unit:
    name: Unit, doc and integration tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install deps
        uses: ./.github/actions/deps

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - uses: Swatinem/rust-cache@v1
        with:
          cache-on-failure: true

      - name: Unit tests
        run: RUST_BACKTRACE=1 RUST_LOG=info cargo test --locked --workspace --all-features --lib --bins -- --nocapture
        if: success() || failure()

      - name: Doc tests
        run: cargo test --locked --workspace --all-features --doc
        if: success() || failure()

      - name: Integration tests
        run: RUST_BACKTRACE=1 RUST_LOG=info cargo test --locked --workspace --test '*' -- --nocapture
        if: success() || failure()

  lint:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install deps
        uses: ./.github/actions/deps

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: rustfmt, clippy
          override: true

      - uses: Swatinem/rust-cache@v1
        with:
          cache-on-failure: true

      - name: cargo fmt
        run: cargo fmt --all -- --check --config imports_granularity=Crate

      - name: cargo clippy
        run: cargo clippy --all --all-features -- -D warnings
    
  # push:
  #   name: Docker build and docker push
  #   timeout-minutes: 30
  #   runs-on: ubuntu-latest
  #   needs:
  #     - lint
  #     - test
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2

  #     - name: Login to GitHub Container Registry
  #       uses: docker/login-action@v1
  #       with:
  #         registry: ${{ env.REGISTRY }}
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}
      
  #     - name: Extract metadata for Docker
  #       id: meta
  #       uses: docker/metadata-action@v3
  #       with:
  #         images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1
  #     - name: Build and push
  #       uses: docker/build-push-action@v2
  #       with:
  #         context: sig-provider/sig-provider
  #         push: ${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags') }}
  #         tags: ${{ steps.meta.outputs.tags }}
  #         labels: ${{ steps.meta.outputs.labels }}
  #         cache-from: type=gha
  #         cache-to: type=gha,mode=max
